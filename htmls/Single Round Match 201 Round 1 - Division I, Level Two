<html>
 <head>
  <script type="text/javascript">
   window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o?o:e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({QJf3ax:[function(t,e){function n(t){function e(e,n,a){t&&t(e,n,a),a||(a={});for(var c=u(e),f=c.length,s=i(a,o,r),p=0;f>p;p++)c[p].apply(s,n);return s}function a(t,e){f[t]=u(t).concat(e)}function u(t){return f[t]||[]}function c(){return n(e)}var f={};return{on:a,emit:e,create:c,listeners:u,_events:f}}function r(){return{}}var o="nr@context",i=t("gos");e.exports=n()},{gos:"7eSDFh"}],ee:[function(t,e){e.exports=t("QJf3ax")},{}],gos:[function(t,e){e.exports=t("7eSDFh")},{}],"7eSDFh":[function(t,e){function n(t,e,n){if(r.call(t,e))return t[e];var o=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,e,{value:o,writable:!0,enumerable:!1}),o}catch(i){}return t[e]=o,o}var r=Object.prototype.hasOwnProperty;e.exports=n},{}],D5DuLP:[function(t,e){function n(t,e,n){return r.listeners(t).length?r.emit(t,e,n):(o[t]||(o[t]=[]),void o[t].push(e))}var r=t("ee").create(),o={};e.exports=n,n.ee=r,r.q=o},{ee:"QJf3ax"}],handle:[function(t,e){e.exports=t("D5DuLP")},{}],XL7HBI:[function(t,e){function n(t){var e=typeof t;return!t||"object"!==e&&"function"!==e?-1:t===window?0:i(t,o,function(){return r++})}var r=1,o="nr@id",i=t("gos");e.exports=n},{gos:"7eSDFh"}],id:[function(t,e){e.exports=t("XL7HBI")},{}],loader:[function(t,e){e.exports=t("G9z0Bl")},{}],G9z0Bl:[function(t,e){function n(){var t=l.info=NREUM.info;if(t&&t.agent&&t.licenseKey&&t.applicationID&&c&&c.body){l.proto="https"===p.split(":")[0]||t.sslForHttp?"https://":"http://",a("mark",["onload",i()]);var e=c.createElement("script");e.src=l.proto+t.agent,c.body.appendChild(e)}}function r(){"complete"===c.readyState&&o()}function o(){a("mark",["domContent",i()])}function i(){return(new Date).getTime()}var a=t("handle"),u=window,c=u.document,f="addEventListener",s="attachEvent",p=(""+location).split("?")[0],l=e.exports={offset:i(),origin:p,features:{}};c[f]?(c[f]("DOMContentLoaded",o,!1),u[f]("load",n,!1)):(c[s]("onreadystatechange",r),u[s]("onload",n)),a("mark",["firstbyte",i()])},{handle:"D5DuLP"}]},{},["G9z0Bl"]);
  </script>
  <title>
   TopCoder Statistics - Problem Statement
  </title>
  <base href="http://community.topcoder.com/"/>
  <script src="/js/reskin/jquery-1.11.0.min.js" type="text/javascript">
  </script>
  <script src="/js/reskin/jquery-migrate-1.2.1.js" type="text/javascript">
  </script>
  <!--[if lt IE 9]>
<script type="text/javascript" src="/js/reskin/html5shiv.js"></script>
<![endif]-->
  <script src="/js/reskin/jquery.jfeed.pack.js" type="text/javascript">
  </script>
  <script src="/js/reskin/newTCScript.js" type="text/javascript">
  </script>
  <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,700,300" rel="stylesheet" type="text/css"/>
  <link href="/css/coders.css" rel="stylesheet" type="text/css"/>
  <link href="/css/jobsRemix.css" rel="stylesheet" type="text/css"/>
  <link href="/css/reskin/myHome.css" rel="stylesheet" type="text/css"/>
  <link href="/css/reskin/newStyles.css" rel="stylesheet" type="text/css"/>
  <!--[if IE 8]>
<link type="text/css" rel="stylesheet" href="/css/reskin/newStyles_ie8.css"/>
<![endif]-->
  <style type="text/css">
   a:link {color: white}
a:visited {color: white}
  </style>
 </head>
 <body text="#FFFFFF">
  <table border="0" cellpadding="0" cellspacing="0" width="100%">
   <tr>
    <td class="alignTop" valign="top" width="180">
    </td>
    <td class="alignTop" valign="top" width="10">
     <img border="0" height="1" src="/i/clear.gif" width="10"/>
    </td>
    <td class="bodyText" valign="top" width="100%">
     <img border="0" height="1" src="/i/clear.gif" vspace="5" width="240"/>
     <br/>
     <!-- BEGIN BODY -->
     <table border="0" cellpadding="0" cellspacing="0" width="100%">
      <tr>
       <td align="left" class="alignBottom" height="26" valign="bottom" width="11">
        <img border="0" height="26" src="/i/steelblue_top_left1.gif" width="11"/>
       </td>
       <td align="left" class="alignBottom" valign="bottom" width="180">
        <img border="0" height="26" src="/i/header_statistics.gif" width="180"/>
       </td>
       <td class="bodyTextBold" valign="middle" width="100%">
        <span class="bodySubhead">
         Problem Statement
        </span>
       </td>
       <td align="right" class="alignTop" valign="top" width="10">
        <img alt="" border="0" height="26" src="/i/clear.gif" width="10"/>
       </td>
      </tr>
     </table>
     <table bgcolor="#001B35" border="0" cellpadding="10" cellspacing="0" class="paddingTable" width="100%">
      <tr>
       <td class="alignTop" valign="top" width="100%">
        <img alt="" border="0" height="1" src="/i/clear.gif" width="240"/>
        <br/>
        <table border="0" cellpadding="0" cellspacing="0" width="100%">
         <tr>
          <td colspan="7">
           <img alt="" border="0" height="1" src="/i/clear.gif" width="1"/>
          </td>
         </tr>
         <tr>
          <td colspan="7">
           <img alt="" border="0" height="5" src="/i/clear.gif" width="1"/>
          </td>
         </tr>
         <tr>
          <td background="/i/steel_gray_bg.gif" class="statTextBig" colspan="7" height="18">
           Problem Statement for RPGRobot
          </td>
         </tr>
         <tr>
          <td colspan="7">
           <img alt="" border="0" height="1" src="/i/clear.gif" width="1"/>
          </td>
         </tr>
         <tr>
          <td colspan="7">
           <img alt="" border="0" height="1" src="/i/clear.gif" width="1"/>
          </td>
         </tr>
         <tr>
          <td align="left" class="problemText" valign="middle">
           <table>
            <tr>
             <td class="statText" colspan="2">
              <h3>
               Problem Statement
              </h3>
             </td>
            </tr>
            <tr>
             <td class="statText">
             </td>
             <td class="statText">
              <p>
               A certain software developer has decided to play a web-based role playing game in his spare time. However, it gets very tedious at certain points, and he wants to write a robot to play it for him during these tedious times. To work towards that, he has mapped a large section of the game. Simply programming a robot to go from a specific starting point and execute a sequence of events is too simple, so he wants to make it smarter, by being able to determine where it is on the map. The only way to describe a given location on the map is by which directions the player can move from that location - any combination of north, south, east, and west.
              </p>
              <p>
               The developer has programmed the robot to move around several times from its initial location, in order to get its bearings.
              </p>
              <p>
               You are to write a class RPGRobot, with a method which takes a String[]
               <b>
                map
               </b>
               detailing the area mapped out by the developer, and another String
               <b>
                movements
               </b>
               , which indicates the first several movements by the robot, and in which directions the robot could have moved from each location visited.
              </p>
              <p>
               <b>
                map
               </b>
               will be formatted according to the following grammar (single quotes are for clarification only):
              </p>
              <pre><tt>
map             ::= &lt;EVENROW&gt; (&lt;ODDROW&gt; &lt;EVENROW&gt;)+
EVENROW         ::= &lt;ASTERISK&gt; (&lt;HORIZONTAL WALL&gt; &lt;ASTERISK&gt;)+
ODDROW          ::= &lt;VERTICAL WALL&gt; (&lt;GAMESPACE&gt; &lt;VERTICAL WALL&gt;)+
HORIZONTAL WALL ::= '-' OR &lt;SPACE&gt;
VERTICAL WALL   ::= '|' OR &lt;SPACE&gt;
SPACE           ::= ' '
ASTERISK        ::= '*'
GAMESPACE       ::= ' '
</tt></pre>
              <p>
               In the above grammar, a &lt;HORIZONTAL WALL&gt; or &lt;VERTICAL WALL&gt; that is a &lt;SPACE&gt; indicates that the player can move between the two adjacent &lt;GAMESPACE&gt;s. Otherwise, the player cannot move between adjacent &lt;GAMESPACE&gt;s.
The map is given in order from west to east, north to south. That is, the first element of
               <b>
                map
               </b>
               is the northernmost row in the map, and the first character of the first element of
               <b>
                map
               </b>
               is the northwesternmost character in the map.
              </p>
              <p>
               <b>
                movements
               </b>
               will be formatted according to the following grammar (single quotes are for clarification only):
              </p>
              <pre><tt>
movements  ::= &lt;DIRECTIONS&gt; (',' &lt;MOVE&gt; ' ' &lt;DIRECTIONS&gt;)*
DIRECTIONS ::= ('' OR 'N') ('' OR 'S') ('' OR 'W') ('' OR 'E')
MOVE       ::= 'N' OR 'S' OR 'W' OR 'E'
</tt></pre>
              <p>
               The data represented by
               <b>
                movements
               </b>
               will be self-consistent. i.e., if the robot moves east from location X, it must be able to move back west, and moving west would take it back to location X. Further, if
               <b>
                movements
               </b>
               indicates that the robot moves east from location X, east must be in the &lt;DIRECTIONS&gt; element for location X.
              </p>
              <p>
               The first &lt;DIRECTIONS&gt; element indicates what directions the player can move from the initial location. Each subsequent &lt;MOVE&gt;,&lt;DIRECTIONS&gt; pair indicates that the robot moved in the &lt;MOVE&gt; direction, and from where it ended up, it could move in the directions specified by &lt;DIRECTIONS&gt;.
              </p>
              <p>
               For example, "NSW,W NS" means that in the initial location, the player could move north, south, or west, and that the robot moved the player west. From that location the player could move north or south.
              </p>
              <p>
               Your job is to determine which &lt;GAMESPACE&gt; locations could have been the starting location, and return them in a String[], where each element is an ordered pairs of coordinates "x,y", where x is the horizontal axis starting at 0 in the northwest corner of the given map and increasing east, and y is the vertical axis starting at 0 in the northwest corner and increasing south. If a possible starting location is not within the bounds of the map, then do not return it.
The elements of the return value must be sorted in ascending order first by x coordinate, and then by y coordinate. The x and y coordinates in the return value should not have leading zeros.
              </p>
             </td>
            </tr>
            <tr>
             <td class="statText" colspan="2">
             </td>
            </tr>
            <tr>
             <td class="statText" colspan="2">
              <h3>
               Definition
              </h3>
             </td>
            </tr>
            <tr>
             <td class="statText">
             </td>
             <td class="statText">
              <table>
               <tr>
                <td class="statText">
                 Class:
                </td>
                <td class="statText">
                 RPGRobot
                </td>
               </tr>
               <tr>
                <td class="statText">
                 Method:
                </td>
                <td class="statText">
                 where
                </td>
               </tr>
               <tr>
                <td class="statText">
                 Parameters:
                </td>
                <td class="statText">
                 String[], String
                </td>
               </tr>
               <tr>
                <td class="statText">
                 Returns:
                </td>
                <td class="statText">
                 String[]
                </td>
               </tr>
               <tr>
                <td class="statText">
                 Method signature:
                </td>
                <td class="statText">
                 String[] where(String[] map, String movements)
                </td>
               </tr>
               <tr>
                <td class="statText" colspan="2">
                 (be sure your method is public)
                </td>
               </tr>
              </table>
             </td>
            </tr>
            <tr>
             <td class="statText">
             </td>
            </tr>
            <tr>
             <td class="statText">
             </td>
            </tr>
            <tr>
             <td class="statText" colspan="2">
             </td>
            </tr>
            <tr>
             <td class="statText" colspan="2">
              <h3>
               Notes
              </h3>
             </td>
            </tr>
            <tr>
             <td align="center" class="statText" valign="top">
              -
             </td>
             <td class="statText">
              It is legal for the player to exit the mapped portion of the game. Since it is unmapped, nothing is known about it.
             </td>
            </tr>
            <tr>
             <td align="center" class="statText" valign="top">
              -
             </td>
             <td class="statText">
              When the player moves from one &lt;GAMESPACE&gt;, he moves directly to another &lt;GAMESPACE&gt;, not to the character in between.
             </td>
            </tr>
            <tr>
             <td align="center" class="statText" valign="top">
              -
             </td>
             <td class="statText">
              In the grammar, the '+' following an element means that one or more of that element must occur, while a '*' following an element means that zero or more of that element must occur.
             </td>
            </tr>
            <tr>
             <td class="statText" colspan="2">
             </td>
            </tr>
            <tr>
             <td class="statText" colspan="2">
              <h3>
               Constraints
              </h3>
             </td>
            </tr>
            <tr>
             <td align="center" class="statText" valign="top">
              -
             </td>
             <td class="statText">
              <b>
               map
              </b>
              will be formatted exactly as described above.
             </td>
            </tr>
            <tr>
             <td align="center" class="statText" valign="top">
              -
             </td>
             <td class="statText">
              <b>
               map
              </b>
              will contain between 3 and 49 elements, inclusive.
             </td>
            </tr>
            <tr>
             <td align="center" class="statText" valign="top">
              -
             </td>
             <td class="statText">
              Every element of
              <b>
               map
              </b>
              will contain between 3 and 49 characters, inclusive.
             </td>
            </tr>
            <tr>
             <td align="center" class="statText" valign="top">
              -
             </td>
             <td class="statText">
              Every element of
              <b>
               map
              </b>
              will have the same number of characters.
             </td>
            </tr>
            <tr>
             <td align="center" class="statText" valign="top">
              -
             </td>
             <td class="statText">
              Every element of
              <b>
               map
              </b>
              will contain only the following characters: ' ', '*', '|', '-'.
             </td>
            </tr>
            <tr>
             <td align="center" class="statText" valign="top">
              -
             </td>
             <td class="statText">
              <b>
               movements
              </b>
              will be formatted exactly as describe above.
             </td>
            </tr>
            <tr>
             <td align="center" class="statText" valign="top">
              -
             </td>
             <td class="statText">
              <b>
               movements
              </b>
              will have between 1 and 50 characters, inclusive.
             </td>
            </tr>
            <tr>
             <td align="center" class="statText" valign="top">
              -
             </td>
             <td class="statText">
              <b>
               movements
              </b>
              will contain only the letters 'N', 'S', 'W', 'E', and the characters ',' and ' ' (comma and space).
             </td>
            </tr>
            <tr>
             <td align="center" class="statText" valign="top">
              -
             </td>
             <td class="statText">
              <b>
               movements
              </b>
              will be self-consistent.
             </td>
            </tr>
            <tr>
             <td class="statText" colspan="2">
             </td>
            </tr>
            <tr>
             <td class="statText" colspan="2">
              <h3>
               Examples
              </h3>
             </td>
            </tr>
            <tr>
             <td align="center" class="statText" nowrap="true">
              0)
             </td>
             <td class="statText">
             </td>
            </tr>
            <tr>
             <td class="statText">
             </td>
             <td class="statText">
              <table>
               <tr>
                <td class="statText">
                 <table>
                  <tr>
                   <td class="statText">
                    <pre>{"* *",
 "| |",
 "*-*"}</pre>
                   </td>
                  </tr>
                  <tr>
                   <td class="statText">
                    <pre>"N"</pre>
                   </td>
                  </tr>
                 </table>
                </td>
               </tr>
               <tr>
                <td class="statText">
                 <pre>Returns: { "1,1" }</pre>
                </td>
               </tr>
               <tr>
                <td class="statText">
                 <table>
                  <tr>
                   <td class="statText" colspan="2">
                    There is only one starting position, and the player can go north from there. There is no movement specified, so he must have started here.
                   </td>
                  </tr>
                 </table>
                </td>
               </tr>
              </table>
             </td>
            </tr>
            <tr>
             <td align="center" class="statText" nowrap="true">
              1)
             </td>
             <td class="statText">
             </td>
            </tr>
            <tr>
             <td class="statText">
             </td>
             <td class="statText">
              <table>
               <tr>
                <td class="statText">
                 <table>
                  <tr>
                   <td class="statText">
                    <pre>{"* *-*",
 "| | |",
 "* * *",
 "| | |",
 "*-*-*"}</pre>
                   </td>
                  </tr>
                  <tr>
                   <td class="statText">
                    <pre>"N,N NS"</pre>
                   </td>
                  </tr>
                 </table>
                </td>
               </tr>
               <tr>
                <td class="statText">
                 <pre>Returns: { "1,3" }</pre>
                </td>
               </tr>
               <tr>
                <td class="statText">
                 <table>
                  <tr>
                   <td class="statText" colspan="2">
                    Given only the initial "N" of
                    <b>
                     movements
                    </b>
                    , the player could have started in either (1,3) or (3,3). However, after moving north, the player can go both north and south, eliminating (3,3) as a starting position.
                   </td>
                  </tr>
                 </table>
                </td>
               </tr>
              </table>
             </td>
            </tr>
            <tr>
             <td align="center" class="statText" nowrap="true">
              2)
             </td>
             <td class="statText">
             </td>
            </tr>
            <tr>
             <td class="statText">
             </td>
             <td class="statText">
              <table>
               <tr>
                <td class="statText">
                 <table>
                  <tr>
                   <td class="statText">
                    <pre>{"*-*-*",
 "     ",
 "* * *",
 "     ",
 "* * *"}</pre>
                   </td>
                  </tr>
                  <tr>
                   <td class="statText">
                    <pre>"SWE,S NSWE"</pre>
                   </td>
                  </tr>
                 </table>
                </td>
               </tr>
               <tr>
                <td class="statText">
                 <pre>Returns: { "1,1",  "3,1" }</pre>
                </td>
               </tr>
               <tr>
                <td class="statText">
                </td>
               </tr>
              </table>
             </td>
            </tr>
            <tr>
             <td align="center" class="statText" nowrap="true">
              3)
             </td>
             <td class="statText">
             </td>
            </tr>
            <tr>
             <td class="statText">
             </td>
             <td class="statText">
              <table>
               <tr>
                <td class="statText">
                 <table>
                  <tr>
                   <td class="statText">
                    <pre>{"* *-* *",
 "|     |",
 "* *-* *",
 "|     |",
 "* *-* *"}</pre>
                   </td>
                  </tr>
                  <tr>
                   <td class="statText">
                    <pre>"NSE,E WE,E NSW,N NSW"</pre>
                   </td>
                  </tr>
                 </table>
                </td>
               </tr>
               <tr>
                <td class="statText">
                 <pre>Returns: { "1,1",  "1,3" }</pre>
                </td>
               </tr>
               <tr>
                <td class="statText">
                 <table>
                  <tr>
                   <td class="statText" colspan="2">
                    Note that starting at (1,1) ends up with the player at (5,-1). Although the player ends up off the map, he started inside, and thus it is a valid starting location.
                   </td>
                  </tr>
                 </table>
                </td>
               </tr>
              </table>
             </td>
            </tr>
            <tr>
             <td align="center" class="statText" nowrap="true">
              4)
             </td>
             <td class="statText">
             </td>
            </tr>
            <tr>
             <td class="statText">
             </td>
             <td class="statText">
              <table>
               <tr>
                <td class="statText">
                 <table>
                  <tr>
                   <td class="statText">
                    <pre>{"* *-*",
 "| | |",
 "* * *",
 "| | |",
 "*-*-*"}</pre>
                   </td>
                  </tr>
                  <tr>
                   <td class="statText">
                    <pre>"N,N S"</pre>
                   </td>
                  </tr>
                 </table>
                </td>
               </tr>
               <tr>
                <td class="statText">
                 <pre>Returns: { "3,3" }</pre>
                </td>
               </tr>
               <tr>
                <td class="statText">
                 <table>
                  <tr>
                   <td class="statText" colspan="2">
                    Identical to Example 1, except that the player can only go south after going north, eliminating (1,3) as a starting point, instead of (3,3).
                   </td>
                  </tr>
                 </table>
                </td>
               </tr>
              </table>
             </td>
            </tr>
            <tr>
             <td align="center" class="statText" nowrap="true">
              5)
             </td>
             <td class="statText">
             </td>
            </tr>
            <tr>
             <td class="statText">
             </td>
             <td class="statText">
              <table>
               <tr>
                <td class="statText">
                 <table>
                  <tr>
                   <td class="statText">
                    <pre>{"*-*",
 "| |",
 "*-*"}</pre>
                   </td>
                  </tr>
                  <tr>
                   <td class="statText">
                    <pre>"N"</pre>
                   </td>
                  </tr>
                 </table>
                </td>
               </tr>
               <tr>
                <td class="statText">
                 <pre>Returns: { }</pre>
                </td>
               </tr>
               <tr>
                <td class="statText">
                 <table>
                  <tr>
                   <td class="statText" colspan="2">
                    The only location is not a possible starting location for this configuration.
                   </td>
                  </tr>
                 </table>
                </td>
               </tr>
              </table>
             </td>
            </tr>
            <tr>
             <td align="center" class="statText" nowrap="true">
              6)
             </td>
             <td class="statText">
             </td>
            </tr>
            <tr>
             <td class="statText">
             </td>
             <td class="statText">
              <table>
               <tr>
                <td class="statText">
                 <table>
                  <tr>
                   <td class="statText">
                    <pre>{"* * * *",
 "       ",
 "*-*-*-*"}
 </pre>
                   </td>
                  </tr>
                  <tr>
                   <td class="statText">
                    <pre>"NWE,N NSE,E SWE,S NWE"</pre>
                   </td>
                  </tr>
                 </table>
                </td>
               </tr>
               <tr>
                <td class="statText">
                 <pre>Returns: { "1,1",  "3,1",  "5,1" }</pre>
                </td>
               </tr>
               <tr>
                <td class="statText">
                </td>
               </tr>
              </table>
             </td>
            </tr>
            <tr>
             <td align="center" class="statText" nowrap="true">
              7)
             </td>
             <td class="statText">
             </td>
            </tr>
            <tr>
             <td class="statText">
             </td>
             <td class="statText">
              <table>
               <tr>
                <td class="statText">
                 <table>
                  <tr>
                   <td class="statText">
                    <pre>{"* * * *-* * * *-*-* * * * * *-* *",  
 "  |     | |     |   |         |  ",  
 "* * *-* * *-* * * * * * * * *-* *",
 "| | |   | | |       |     |     |",
 "* * *-*-* *-*-*-* * * * * * *-*-*", 
 "  |     | |   | |   |   |     | |", 
 "*-* *-* * *-*-* *-*-*-* * *-* *-*", 
 "    | |     |     | |   |   | |  ", 
 "*-*-* *-*-*-*-* *-*-*-* *-*-* * *", 
 "| |   |         | | |       |    ", 
 "*-*-* * * *-* *-*-* * * * *-*-* *", 
 "  | |     | | | | | |     | | |  ", 
 "*-* *-* * * *-* *-*-* *-* * *-*-*", 
 "  | |   | | | |   |   | | |   |  ", 
 "*-* * * *-* * *-*-*-* * * * * * *", 
 "|     | | |   |   |   | | |      ", 
 "* *-*-*-*-*-* *-* * * *-* *-* *-*", 
 "  | | |         |   | |   |   |  ", 
 "* * *-*-*-* *-* *-*-*-*-*-*-*-*-*", 
 "| |     |   | | | |     |     | |", 
 "* *-* * *-* *-*-*-*-* * *-*-*-* *", 
 "    | | | | |   | | | |     | |  ", 
 "* *-*-*-*-* *-*-* *-* *-*-* * *-*", 
 "  | | | | |   |         | | |    ", 
 "*-*-*-* *-*-* * *-* *-* * * *-*-*", 
 "|   | |           |   | | |     |", 
 "* *-* * * *-*-* *-*-*-* *-* * *-*", 
 "      |     | | | |     |       |", 
 "*-* * * * * *-*-* * * * * *-* * *", 
 "|           | |       |   | |   |", 
 "* * *-*-* *-*-* * * *-*-* * * *-*", 
 "|   | | | | |   | | | | | |   | |", 
 "*-* * *-* * * * * * *-* *-* *-*-*", 
 "  |     | | |   |             | |", 
 "*-* *-* *-* * * * *-* *-* *-*-*-*"}</pre>
                   </td>
                  </tr>
                  <tr>
                   <td class="statText">
                    <pre>"NW,W SE,S NSW,W NSWE"</pre>
                   </td>
                  </tr>
                 </table>
                </td>
               </tr>
               <tr>
                <td class="statText">
                 <pre>Returns: { "1,23" }</pre>
                </td>
               </tr>
               <tr>
                <td class="statText">
                </td>
               </tr>
              </table>
             </td>
            </tr>
           </table>
           <hr/>
           <p>
            This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.
           </p>
          </td>
         </tr>
         <tr>
          <td colspan="7">
           <img alt="" border="0" height="3" src="/i/clear.gif" width="1"/>
          </td>
         </tr>
         <tr>
          <td background="/i/steel_blue_bg.gif" class="statText" colspan="7">
           <img alt="" border="0" height="5" src="/i/clear.gif" width="1"/>
          </td>
         </tr>
         <tr>
          <td class="statText" colspan="7">
           <img alt="" border="0" height="16" src="/i/clear.gif" width="1"/>
          </td>
         </tr>
         <tr>
          <td class="statText" colspan="7">
           This problem was used for:
           <br/>
           <a href="/tc?module=ProblemDetail&amp;rd=5872&amp;pm=2888">
            Single Round Match 201 Round 1 - Division I, Level Two
           </a>
          </td>
         </tr>
        </table>
       </td>
      </tr>
      <tr>
       <td width="100%">
        <img alt="" border="0" height="10" src="/i/clear.gif" width="1"/>
       </td>
      </tr>
     </table>
     <p>
      <br/>
     </p>
     <!-- END BODY -->
    </td>
    <td width="10">
     <img border="0" height="1" src="/i/clear.gif" width="10"/>
    </td>
    <td class="alignTop" valign="top" width="180">
     <img border="0" height="1" src="/i/clear.gif" width="180"/>
     <script language="javascript" type="text/javascript">
     </script>
     <div class="rightColContent">
      <br/>
      <br/>
     </div>
    </td>
    <!-- Gutter -->
    <td width="10">
     <img border="0" height="1" src="/i/clear.gif" width="10"/>
    </td>
    <!-- Gutter Ends -->
   </tr>
  </table>
  <script type="text/javascript">
   var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-6340959-1']);
  _gaq.push(['_setDomainName', '.topcoder.com']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
  </script>
  <script type="text/javascript">
   window.NREUM||(NREUM={});NREUM.info={"applicationID":"5697653","applicationTime":42,"beacon":"beacon-3.newrelic.com","queueTime":0,"licenseKey":"496af5ee90","transactionName":"ZlcBbBQAChBSARIKXV8dKWs2ThcXUhYPEEZYURAXFhMLAV8HCzBGUEYGVQMPEE1ZERY=","agent":"js-agent.newrelic.com\/nr-476.min.js","errorBeacon":"bam.nr-data.net"}
  </script>
 </body>
</html>
